{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class 'BaseConnector' for connector implementations to various DB and SaaS providers. It outlines required methods like validate, probe, and execute, along with common attributes.", "external_files": ["abc", "typing"], "external_methods": ["abc.ABC", "abc.abstractmethod", "typing.Any", "typing.Dict", "typing.Literal"], "published": ["BaseConnector"], "classes": [{"name": "BaseConnector", "description": "An abstract base class specifying the interface for connector implementations to different data sources or SaaS providers."}], "methods": [{"name": "None validate(self, config: Dict[str, Any])", "description": "Abstract method to validate the connector configuration. Should raise ValueError if validation fails.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] probe(self, config: Dict[str, Any])", "description": "Abstract method to probe provider capabilities or metadata, returning a dictionary with the info.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "str execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "description": "Abstract method to start a job ('import' or 'sync') with given configuration and parameters, returning a job ID.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] example_fields(self)", "description": "Method to return example configuration fields for UI display.", "scope": "BaseConnector", "scopeKind": "class"}, {"name": "None __init__(self, connector_id: str, group: Literal[\"db\", \"saas\"], name: str)", "scope": "BaseConnector", "scopeKind": "class", "description": "unavailable"}], "calls": [], "search-terms": ["BaseConnector", "abstract class", "connector interface", "validate", "probe", "execute", "abc", "type annotations", "Python base class"], "state": 2, "file_id": 12, "knowledge_revision": 52, "git_revision": "bd31475813d25d18f20aff49f24e24df16edecf9", "revision_history": [{"26": ""}, {"52": "bd31475813d25d18f20aff49f24e24df16edecf9"}], "ctags": [{"_type": "tag", "name": "BaseConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^class BaseConnector(ABC):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^    def __init__(self, connector_id: str, group: Literal[\"db\", \"saas\"], name: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, connector_id: str, group: Literal[\"db\", \"saas\"], name: str)", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "example_fields", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^    def example_fields(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "execute", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^    async def execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params:/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "probe", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^    async def probe(self, config: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "BaseConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/base.py", "pattern": "/^    async def validate(self, config: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "BaseConnector", "scopeKind": "class"}], "hash": "d95863835b5f95aacda45ee93ae18ff9", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/base.py"}
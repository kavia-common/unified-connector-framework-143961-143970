{"is_source_file": true, "format": "Python", "description": "This file implements a client for the Jira REST API, supporting OAuth2 and API key authentication, token refresh, retries with exponential backoff, pagination, and high-level endpoints for listing projects, issues, comments, and creating issues. It defines classes to handle authentication and API interactions with detailed handling for rate limiting, transient errors, and paginated responses.", "external_files": ["src.core.logging_config"], "external_methods": ["get_logger"], "published": ["JiraClient", "JiraAuth"], "classes": [{"name": "JiraAuth", "description": "Manages Jira authentication, supporting API key and OAuth2 methods, including token refresh logic."}, {"name": "JiraClient", "description": "Main client class for interacting with the Jira REST API, providing methods for listing projects, issues, comments, creating issues, and handling pagination and retries."}], "methods": [{"name": "None set_token(self, token: str, expires_in: Optional[int] = None)", "description": "Sets OAuth2 access token and optionally its expiry time.", "scope": "JiraAuth", "scopeKind": "class"}, {"name": "Dict[str,str] auth_headers(self)", "description": "Returns headers with the appropriate Authorization based on current auth method.", "scope": "JiraAuth", "scopeKind": "class"}, {"name": "None refresh_if_needed(self, client: httpx.AsyncClient)", "description": "Refreshes OAuth2 token if expired or missing.", "scope": "JiraAuth", "scopeKind": "class"}, {"name": "httpx.Response _request( self, method: str, path: str, params: Optional[Dict[str, Any]] = None, json: Optional[Dict[str, Any]] = None )", "description": "Performs an HTTP request with retry logic for transient errors.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Generator[Tuple[List[Dict[str,Any]],Optional[int]],None,None] paged_get( self, path: str, query: Optional[Dict[str, Any]] = None, page_size: int = 50, start_at: int = 0, items_key: str = \"values\" )", "description": "Generator for paginated GET requests handling Jira's pagination scheme.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_projects(self, page_size: int = 50, start_at: int = 0)", "description": "Retrieves a list of Jira projects, returning a single page.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_issues( self, jql: Optional[str] = None, project_key: Optional[str] = None, page_size: int = 50, start_at: int = 0 )", "description": "Retrieves issues matching JQL or project key, with pagination support.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_comments(self, issue_id_or_key: str, page_size: int = 50, start_at: int = 0)", "description": "Retrieves comments for a specific issue, with pagination support.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, description: Optional[str] = None, issue_type: str = \"Task\")", "description": "Creates a new Jira issue with provided project key, summary, description, and issue type.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None __init__( self, auth: JiraAuth, timeout: float = 30.0, max_retries: int = 4, backoff_factor: float = 0.5, )", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__( self, base_url: str, method: str, access_token: Optional[str] = None, refresh_token: Optional[str] = None, client_id: Optional[str] = None, client_secret: Optional[str] = None, api_email: Optional[str] = None, api_token: Optional[str] = None, token_endpoint: Optional[str] = None, )", "scope": "JiraAuth", "scopeKind": "class", "description": "unavailable"}, {"name": "float _sleep_delay(self, attempt: int)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "None close(self)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._client.request", "self.auth.refresh_if_needed", "resp.raise_for_status", "self._sleep_delay", "self.auth.auth_headers", "self.auth.set_token", "self._client.aclose"], "search-terms": ["Jira API", "OAuth2", "API key", "pagination", "rate limiting", "token refresh", "issue creation", "project list", "issue list", "comments", "retries", "exponential backoff"], "state": 2, "file_id": 26, "knowledge_revision": 66, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraAuth", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^class JiraAuth:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, auth: JiraAuth, timeout: float = 30.0, max_retries: int = 4, backoff_factor: float = 0.5, )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, base_url: str, method: str, access_token: Optional[str] = None, refresh_token: Optional[str] = None, client_id: Optional[str] = None, client_secret: Optional[str] = None, api_email: Optional[str] = None, api_token: Optional[str] = None, token_endpoint: Optional[str] = None, )", "scope": "JiraAuth", "scopeKind": "class"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^_logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_request", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def _request($/", "language": "Python", "typeref": "typename:httpx.Response", "kind": "member", "signature": "( self, method: str, path: str, params: Optional[Dict[str, Any]] = None, json: Optional[Dict[str, Any]] = None )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_sleep_delay", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _sleep_delay(self, attempt: int) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self, attempt: int)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "auth_headers", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def auth_headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraAuth", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, description: Optional[str] = No/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, description: Optional[str] = None, issue_type: str = \"Task\")", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_comments", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_comments(self, issue_id_or_key: str, page_size: int = 50, start_at: int = 0) /", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_id_or_key: str, page_size: int = 50, start_at: int = 0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_issues", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_issues($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, jql: Optional[str] = None, project_key: Optional[str] = None, page_size: int = 50, start_at: int = 0 )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_projects(self, page_size: int = 50, start_at: int = 0) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, page_size: int = 50, start_at: int = 0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "paged_get", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def paged_get($/", "language": "Python", "typeref": "typename:Generator[Tuple[List[Dict[str,Any]],Optional[int]],None,None]", "kind": "member", "signature": "( self, path: str, query: Optional[Dict[str, Any]] = None, page_size: int = 50, start_at: int = 0, items_key: str = \"values\" )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_if_needed", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def refresh_if_needed(self, client: httpx.AsyncClient) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, client: httpx.AsyncClient)", "scope": "JiraAuth", "scopeKind": "class"}, {"_type": "tag", "name": "set_token", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def set_token(self, token: str, expires_in: Optional[int] = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, token: str, expires_in: Optional[int] = None)", "scope": "JiraAuth", "scopeKind": "class"}], "hash": "b46ddf87f144b3e2163375436a43143b", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/client.py", "fields": [{"name": "_logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"66": ""}]}
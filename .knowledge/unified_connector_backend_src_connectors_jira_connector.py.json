{"is_source_file": true, "format": "Python", "description": "This file implements a Jira connector adapter for the Unified Connector Framework. It provides methods to validate configuration, probe capabilities, execute jobs, list containers (projects), list items (issues), list comments, and create issues in Jira. It integrates with Jira-specific client classes and mapping functions, serving as an interface layer between the framework and Jira's API.", "external_files": ["src.connectors.base", "src.core.logging_config", "src.connectors.jira.client", "src.connectors.jira.mapping", "src.connectors.jira.types"], "external_methods": ["get_logger", "JiraClient.list_projects", "JiraClient.list_issues", "JiraClient.list_comments", "JiraClient.create_issue", "JiraAuth"], "published": ["JiraConnector"], "classes": [{"name": "JiraConnector", "description": "A connector class implementing the BaseConnector interface for Jira, providing methods for validation, probing, execution, listing projects, issues, comments, and creating issues."}], "methods": [{"name": "None validate(self, config: Dict[str, Any])", "description": "Validates the provided configuration for correctness.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] probe(self, config: Dict[str, Any])", "description": "Probes Jira for capabilities and metadata based on the configuration.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "description": "Starts a stub job related to Jira, returning a UUID as job id.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] example_fields(self)", "description": "Returns example configuration fields for setting up the Jira connector.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "JiraClient _client(self, cfg: JiraConnectorConfig)", "description": "Creates and returns a JiraClient instance configured with JiraAuth based on the provided config.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ContainersResult containers(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = None)", "description": "Lists Jira projects as containers.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ItemsResult items( self, config: Dict[str, Any], container_id: Optional[str] = None, limit: int = 50, cursor: Optional[str] = None )", "description": "Lists Jira issues, optionally filtered by project key.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CommentsResult comments(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Optional[str] = None)", "description": "Lists comments for a specific Jira issue.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] create(self, config: Dict[str, Any], body: Dict[str, Any])", "description": "Creates a new Jira issue with the specified body information.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["asyncio.sleep", "uuid.uuid4", "JiraClient.list_projects", "JiraClient.list_issues", "JiraClient.list_comments", "JiraClient.create_issue", "JiraConnectorConfig.model_validate", "map_project_to_container", "map_issue_to_item", "map_comment_to_unified", "CreateIssueRequest.model_validate"], "search-terms": ["Jira", "JiraConnector", "list_projects", "list_issues", "list_comments", "create_issue", "BaseConnector", "JiraClient", "mapping", "probe", "validate"], "state": 2, "file_id": 27, "knowledge_revision": 92, "git_revision": "bccb172847e1318b8f0e6c4bdcae9d6318de664d", "revision_history": [{"68": ""}, {"92": "bccb172847e1318b8f0e6c4bdcae9d6318de664d"}], "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def _client(self, cfg: JiraConnectorConfig) -> JiraClient:$/", "language": "Python", "typeref": "typename:JiraClient", "kind": "member", "signature": "(self, cfg: JiraConnectorConfig)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^_logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "comments", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def comments(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Opti/", "language": "Python", "typeref": "typename:CommentsResult", "kind": "member", "signature": "(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "containers", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def containers(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = /", "language": "Python", "typeref": "typename:ContainersResult", "kind": "member", "signature": "(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def create(self, config: Dict[str, Any], body: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any], body: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "example_fields", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    def example_fields(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "execute", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params:/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def items($/", "language": "Python", "typeref": "typename:ItemsResult", "kind": "member", "signature": "( self, config: Dict[str, Any], container_id: Optional[str] = None, limit: int = 50, cursor: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "probe", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def probe(self, config: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def validate(self, config: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "b6300613ff81bdde0e06fb03b3e27f86", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/connector.py", "fields": [{"name": "_logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}
{"is_source_file": true, "format": "Python", "description": "This Python source file implements a Jira connector adapter for a Unified Connector Framework. It provides methods for validating configuration, probing capabilities, executing jobs, listing containers (projects), listing items (issues), listing comments, and creating issues in Jira. The file defines the JiraConnector class which extends BaseConnector, and integrates with JiraClient, mapping helpers, and configuration models.", "external_files": ["src.connectors.base", "src.core.errors", "src.core.logging_config", ".client", ".mapping", ".types"], "external_methods": ["src.connectors.base.BaseConnector", "src.core.errors.UnifiedError", "src.core.logging_config.get_logger", "src.connectors.jira.client.JiraAuth", "src.connectors.jira.client.JiraClient", "src.connectors.jira.mapping.map_project_to_container", "src.connectors.jira.mapping.map_issue_to_item", "src.connectors.jira.mapping.map_comment_to_unified", "src.connectors.jira.types.JiraConnectorConfig", "src.connectors.jira.types.ContainersResult", "src.connectors.jira.types.ItemsResult", "src.connectors.jira.types.CommentsResult", "src.connectors.jira.types.CreateIssueRequest"], "published": ["JiraConnector", "validate", "probe", "execute", "containers", "items", "comments", "create", "example_fields"], "classes": [{"name": "JiraConnector", "description": "A connector class implementing interactions with Jira, including project listing, issue listing, comment retrieval, and issue creation."}], "methods": [{"name": "None validate(self, config: Dict[str, Any])", "description": "Validates the provided configuration for correctness.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] probe(self, config: Dict[str, Any])", "description": "Performs a capability and metadata probe on the Jira instance.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "description": "Starts a stub job (e.g., import or sync) and returns a job ID.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] example_fields(self)", "description": "Provides example configuration fields.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "JiraClient _client(self, cfg: JiraConnectorConfig)", "description": "Creates a JiraClient instance with proper authentication.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ContainersResult containers(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = None)", "description": "Lists Jira projects as containers.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ItemsResult items( self, config: Dict[str, Any], container_id: Optional[str] = None, limit: int = 50, cursor: Optional[str] = None )", "description": "Lists Jira issues, optionally scoped by project.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CommentsResult comments(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Optional[str] = None)", "description": "Lists comments for a specific Jira issue.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] create(self, config: Dict[str, Any], body: Dict[str, Any])", "description": "Creates a new Jira issue.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["asyncio.sleep", "uuid.uuid4", "JiraConnectorConfig.model_validate", "client.list_projects", "client.list_issues", "client.list_comments", "client.create_issue", "map_project_to_container", "map_issue_to_item", "map_comment_to_unified"], "search-terms": ["JiraConnector", "list_projects", "list_issues", "list_comments", "create_issue", "Unified Connector Framework"], "state": 2, "file_id": 27, "knowledge_revision": 68, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def _client(self, cfg: JiraConnectorConfig) -> JiraClient:$/", "language": "Python", "typeref": "typename:JiraClient", "kind": "member", "signature": "(self, cfg: JiraConnectorConfig)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^_logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "comments", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def comments(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Opti/", "language": "Python", "typeref": "typename:CommentsResult", "kind": "member", "signature": "(self, config: Dict[str, Any], item_id: str, limit: int = 50, cursor: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "containers", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def containers(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = /", "language": "Python", "typeref": "typename:ContainersResult", "kind": "member", "signature": "(self, config: Dict[str, Any], limit: int = 50, cursor: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def create(self, config: Dict[str, Any], body: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any], body: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "example_fields", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    def example_fields(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "execute", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def execute(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params:/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, job_type: Literal[\"import\", \"sync\"], config: Dict[str, Any], params: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def items($/", "language": "Python", "typeref": "typename:ItemsResult", "kind": "member", "signature": "( self, config: Dict[str, Any], container_id: Optional[str] = None, limit: int = 50, cursor: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "probe", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def probe(self, config: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/connectors/jira/connector.py", "pattern": "/^    async def validate(self, config: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, config: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "be14ffef7edd49893fd0e3c1bef4b88d", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/connector.py", "fields": [{"name": "_logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"68": ""}]}
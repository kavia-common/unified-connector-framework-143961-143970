{"is_source_file": true, "format": "Python", "description": "This file contains FastAPI middleware components for tenant scoping, correlation ID management, structured logging, credentials masking, and metrics tracking. It defines the TenantContextMiddleware class and associated utility functions for handling request context and logging.", "external_files": ["fastapi", "starlette.middleware.base", ".logging_config"], "external_methods": ["get_logger", "Request.headers", "Request.method", "Request.url", "Request.query_params", "Response.status_code"], "published": ["get_tenant_id", "get_correlation_id"], "classes": [{"name": "TenantContextMiddleware", "description": "ASGI middleware that extracts tenant IDs, correlation IDs, tracks request duration, and logs structured request information while masking sensitive data."}], "methods": [{"name": "Optional[Dict[str,Any]] mask_secrets_in_body(body: Optional[Dict[str, Any]])", "description": "Returns a deep-masked copy of a JSON-like body, masking sensitive keys and values.", "scope": "", "scopeKind": ""}, {"name": "Any _mask_value(value: Any)", "description": "Recursively masks sensitive values within given data, based on key patterns and value types.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] get_tenant_id(request: Request)", "description": "Retrieves the tenant ID associated with the current request context.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] get_correlation_id(request: Request)", "description": "Retrieves the correlation ID associated with the current request context.", "scope": "", "scopeKind": ""}, {"name": "None __init__(self, app, api_tag_header: str = \"X-Api-Tag\")", "scope": "TenantContextMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "Response dispatch(self, request: Request, call_next: Callable[[Request], Awaitable[Response]])", "scope": "TenantContextMiddleware", "scopeKind": "class", "description": "unavailable"}], "calls": ["time.perf_counter", "uuid.uuid4", "_logger.exception", "_logger.info"], "search-terms": ["FastAPI tenant middleware", "correlation ID extraction", "structured logging", "sensitive data masking", "middleware class"], "state": 2, "file_id": 38, "knowledge_revision": 94, "git_revision": "", "ctags": [{"_type": "tag", "name": "SENSITIVE_KEYS_PATTERN", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^SENSITIVE_KEYS_PATTERN = re.compile($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "TenantContextMiddleware", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^class TenantContextMiddleware(BaseHTTPMiddleware):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^    def __init__(self, app, api_tag_header: str = \"X-Api-Tag\") -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, app, api_tag_header: str = \"X-Api-Tag\")", "scope": "TenantContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^_logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_mask_value", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^def _mask_value(value: Any) -> Any:$/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "(value: Any)"}, {"_type": "tag", "name": "dispatch", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^    async def dispatch(self, request: Request, call_next: Callable[[Request], Awaitable[Response/", "language": "Python", "typeref": "typename:Response", "kind": "member", "signature": "(self, request: Request, call_next: Callable[[Request], Awaitable[Response]])", "scope": "TenantContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "get_correlation_id", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^def get_correlation_id(request: Request) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "get_tenant_id", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^def get_tenant_id(request: Request) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "mask_secrets_in_body", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/core/middleware.py", "pattern": "/^def mask_secrets_in_body(body: Optional[Dict[str, Any]]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(body: Optional[Dict[str, Any]])"}], "hash": "c041f8e9234a33572520b715b88fdfbb", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/middleware.py", "fields": [{"name": "SENSITIVE_KEYS_PATTERN = re.compile(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"94": ""}]}
{"is_source_file": true, "format": "Python", "description": "This file provides a singleton factory and lifecycle management for a MongoDB client connection using Motor (an asynchronous MongoDB driver) integrated within a FastAPI application. It defines functions to obtain a MongoDB client instance, get the database handle, and close the connection.", "external_files": ["src.core.config"], "external_methods": ["get_settings", "settings.MONGODB_URL.unicode_string()", "settings.MONGODB_DB"], "published": ["mongo_client", "mongo_db", "close_mongo_client"], "classes": [], "methods": [{"name": "AsyncIOMotorClient mongo_client()", "description": "Returns a singleton instance of AsyncIOMotorClient, creating it if it doesn't exist.", "scope": "", "scopeKind": ""}, {"name": "AsyncIOMotorDatabase mongo_db()", "description": "Returns the configured AsyncIOMotorDatabase handle, initializing it if necessary.", "scope": "", "scopeKind": ""}, {"name": "None close_mongo_client()", "description": "Closes the MongoDB client connection if it has been initialized and resets the global references.", "scope": "", "scopeKind": ""}], "calls": ["get_settings()", "AsyncIOMotorClient(settings.MONGODB_URL.unicode_string())", "mongo_client()", "get_settings()", "mongo_client()[get_settings().MONGODB_DB]", "settings.MONGODB_DB", "settings.MONGODB_URL.unicode_string()", "_client.close()"], "search-terms": ["MongoDB singleton", "Motor client factory", "FastAPI MongoDB connection", "async MongoDB connection", "MongoDB lifecycle management"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/db/mongo.py", "pattern": "/^_client: Optional[AsyncIOMotorClient] = None$/", "language": "Python", "typeref": "typename:Optional[AsyncIOMotorClient]", "kind": "variable"}, {"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/db/mongo.py", "pattern": "/^_db: Optional[AsyncIOMotorDatabase] = None$/", "language": "Python", "typeref": "typename:Optional[AsyncIOMotorDatabase]", "kind": "variable"}, {"_type": "tag", "name": "close_mongo_client", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/db/mongo.py", "pattern": "/^async def close_mongo_client() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "mongo_client", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/db/mongo.py", "pattern": "/^def mongo_client() -> AsyncIOMotorClient:$/", "language": "Python", "typeref": "typename:AsyncIOMotorClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "mongo_db", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/db/mongo.py", "pattern": "/^def mongo_db() -> AsyncIOMotorDatabase:$/", "language": "Python", "typeref": "typename:AsyncIOMotorDatabase", "kind": "function", "signature": "()"}], "hash": "76a8b7c696ed0611d39894218677ebd8", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/db/mongo.py", "fields": [{"name": "Optional[AsyncIOMotorClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[AsyncIOMotorDatabase] _db", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}
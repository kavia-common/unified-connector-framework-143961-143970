{"is_source_file": true, "format": "Python", "description": "This file provides an EncryptionService class for encrypting and decrypting secrets and tokens using the Fernet (AES128 with CBC + HMAC) encryption scheme. It includes utility functions to initialize and retrieve a singleton instance of the encryption service, handling configuration and key management.", "external_files": ["src.core.config", "src.core.logging_config"], "external_methods": ["get_settings", "get_logger"], "published": ["get_encryption_service"], "classes": [{"name": "EncryptionService", "description": "Provides encryption and decryption functionalities for secrets and tokens using Fernet encryption."}], "methods": [{"name": "None __init__(self, key: Optional[str] = None)", "description": "Initializes the EncryptionService with a provided key or generates an ephemeral key if none is provided.", "scope": "EncryptionService", "scopeKind": "class"}, {"name": "str encrypt(self, plaintext: str)", "description": "Encrypts plaintext into a URL-safe token.", "scope": "EncryptionService", "scopeKind": "class"}, {"name": "str decrypt(self, token: str)", "description": "Decrypts a token back into plaintext.", "scope": "EncryptionService", "scopeKind": "class"}, {"name": "EncryptionService get_encryption_service()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["cryptography.fernet.Fernet", "cryptography.fernet.MultiFernet", "src.core.config.get_settings", "src.core.logging_config.get_logger", "get_encryption_service"], "search-terms": ["encryption", "Fernet", "AES128", "cryptography", "token encryption", "encryption key management"], "state": 2, "file_id": 9, "knowledge_revision": 55, "git_revision": "bd31475813d25d18f20aff49f24e24df16edecf9", "revision_history": [{"19": ""}, {"55": "bd31475813d25d18f20aff49f24e24df16edecf9"}], "ctags": [{"_type": "tag", "name": "EncryptionService", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^class EncryptionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^    def __init__(self, key: Optional[str] = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, key: Optional[str] = None)", "scope": "EncryptionService", "scopeKind": "class"}, {"_type": "tag", "name": "_encryption_singleton", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^_encryption_singleton: Optional[EncryptionService] = None$/", "language": "Python", "typeref": "typename:Optional[EncryptionService]", "kind": "variable"}, {"_type": "tag", "name": "_logger", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^_logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "decrypt", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^    def decrypt(self, token: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, token: str)", "scope": "EncryptionService", "scopeKind": "class"}, {"_type": "tag", "name": "encrypt", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^    def encrypt(self, plaintext: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, plaintext: str)", "scope": "EncryptionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_encryption_service", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/src/services/encryption.py", "pattern": "/^def get_encryption_service() -> EncryptionService:$/", "language": "Python", "typeref": "typename:EncryptionService", "kind": "function", "signature": "()"}], "hash": "ca2e95755c815fd2db655e4c380a6a06", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/services/encryption.py", "fields": [{"name": "Optional[EncryptionService] _encryption_singleton", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}
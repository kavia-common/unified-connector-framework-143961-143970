{"is_source_file": true, "format": "Python", "description": "This is a test suite for the in-memory connector registry system, including tests for registration, retrieval, overwriting, and presence verification of various connector components.", "external_files": ["src.connectors.registry", "src.connectors.base"], "external_methods": ["ConnectorRegistry.register", "ConnectorRegistry.get", "ConnectorRegistry.all", "BaseConnector"], "published": [], "classes": [{"name": "DummyConnector", "description": "A mock implementation of a connector inheriting from BaseConnector for testing purposes."}], "methods": [{"name": "DummyConnector.__init__", "description": "Initializer setting up the dummy connector with fixed attributes."}, {"name": "DummyConnector.validate", "description": "Asynchronous method placeholder for validating connector configuration."}, {"name": "DummyConnector.probe", "description": "Asynchronous method for checking connector health."}, {"name": "DummyConnector.execute", "description": "Asynchronous method to 'execute' a job with the connector, returning a dummy job id."}, {"name": "test_registry_add_and_fetch()", "description": "Tests adding a connector to the registry and fetching it by id.", "scope": "", "scopeKind": ""}, {"name": "test_registry_overwrite_same_id()", "description": "Tests that registering a connector with an existing id overwrites the previous one.", "scope": "", "scopeKind": ""}, {"name": "test_global_registry_contains_expected_connectors()", "description": "Verifies that certain default connectors (e.g., jira, confluence) are present in the global registry and have expected attributes.", "scope": "", "scopeKind": ""}, {"name": "None __init__(self)", "scope": "DummyConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "execute(self, job_type, config, params)", "scope": "DummyConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "probe(self, config)", "scope": "DummyConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "validate(self, config)", "scope": "DummyConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["src.connectors.registry.ConnectorRegistry.register", "src.connectors.registry.ConnectorRegistry.get", "src.connectors.registry.ConnectorRegistry.all", "src.connectors.base.BaseConnector"], "search-terms": ["ConnectorRegistry", "DummyConnector", "register", "registry", "test_registry", "connectors", "base"], "state": 2, "file_id": 41, "knowledge_revision": 114, "git_revision": "271a0f365c3304e4bc7746def2afbfe281979be8", "revision_history": [{"107": ""}, {"114": "271a0f365c3304e4bc7746def2afbfe281979be8"}], "ctags": [{"_type": "tag", "name": "DummyConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^class DummyConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "DummyConnector", "scopeKind": "class"}, {"_type": "tag", "name": "execute", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^    async def execute(self, job_type, config, params):$/", "language": "Python", "kind": "member", "signature": "(self, job_type, config, params)", "scope": "DummyConnector", "scopeKind": "class"}, {"_type": "tag", "name": "probe", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^    async def probe(self, config):$/", "language": "Python", "kind": "member", "signature": "(self, config)", "scope": "DummyConnector", "scopeKind": "class"}, {"_type": "tag", "name": "test_global_registry_contains_expected_connectors", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^def test_global_registry_contains_expected_connectors():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_registry_add_and_fetch", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^def test_registry_add_and_fetch():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_registry_overwrite_same_id", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^def test_registry_overwrite_same_id():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/unified-connector-framework-143961-143970/unified_connector_backend/tests/test_registry.py", "pattern": "/^    async def validate(self, config):$/", "language": "Python", "kind": "member", "signature": "(self, config)", "scope": "DummyConnector", "scopeKind": "class"}], "hash": "f45fd93c061f1ea1ded0ada952f56d59", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/tests/test_registry.py"}